// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 20.1.1 Build 720 11/11/2020 SJ Lite Edition"

// DATE "12/02/2021 10:56:43"

// 
// Device: Altera EP4CE6E22C6 Package TQFP144
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module AddSubDemo (
	Sum1,
	Sub,
	Input0,
	Input1,
	Input2,
	Input3,
	Input4,
	Input5,
	Input6,
	Input7,
	Sum2,
	Sum3,
	Sum4,
	Overflow);
output 	Sum1;
input 	Sub;
input 	Input0;
input 	Input1;
input 	Input2;
input 	Input3;
input 	Input4;
input 	Input5;
input 	Input6;
input 	Input7;
output 	Sum2;
output 	Sum3;
output 	Sum4;
output 	Overflow;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \Sum1~output_o ;
wire \Sum2~output_o ;
wire \Sum3~output_o ;
wire \Sum4~output_o ;
wire \Overflow~output_o ;
wire \Input0~input_o ;
wire \Input1~input_o ;
wire \inst|inst4|inst1~0_combout ;
wire \Sub~input_o ;
wire \inst|inst4|inst6~0_combout ;
wire \Input2~input_o ;
wire \Input3~input_o ;
wire \inst|inst5|inst1~combout ;
wire \Input4~input_o ;
wire \Input5~input_o ;
wire \inst|inst5|inst6~0_combout ;
wire \inst|inst6|inst1~0_combout ;
wire \Input6~input_o ;
wire \Input7~input_o ;
wire \inst|inst6|inst6~0_combout ;
wire \inst|inst7|inst1~0_combout ;
wire \inst|inst8~0_combout ;


cycloneive_io_obuf \Sum1~output (
	.i(\inst|inst4|inst1~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Sum1~output_o ),
	.obar());
// synopsys translate_off
defparam \Sum1~output .bus_hold = "false";
defparam \Sum1~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \Sum2~output (
	.i(\inst|inst5|inst1~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Sum2~output_o ),
	.obar());
// synopsys translate_off
defparam \Sum2~output .bus_hold = "false";
defparam \Sum2~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \Sum3~output (
	.i(\inst|inst6|inst1~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Sum3~output_o ),
	.obar());
// synopsys translate_off
defparam \Sum3~output .bus_hold = "false";
defparam \Sum3~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \Sum4~output (
	.i(\inst|inst7|inst1~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Sum4~output_o ),
	.obar());
// synopsys translate_off
defparam \Sum4~output .bus_hold = "false";
defparam \Sum4~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \Overflow~output (
	.i(\inst|inst8~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Overflow~output_o ),
	.obar());
// synopsys translate_off
defparam \Overflow~output .bus_hold = "false";
defparam \Overflow~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_ibuf \Input0~input (
	.i(Input0),
	.ibar(gnd),
	.o(\Input0~input_o ));
// synopsys translate_off
defparam \Input0~input .bus_hold = "false";
defparam \Input0~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \Input1~input (
	.i(Input1),
	.ibar(gnd),
	.o(\Input1~input_o ));
// synopsys translate_off
defparam \Input1~input .bus_hold = "false";
defparam \Input1~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \inst|inst4|inst1~0 (
// Equation(s):
// \inst|inst4|inst1~0_combout  = \Input0~input_o  $ (\Input1~input_o )

	.dataa(gnd),
	.datab(gnd),
	.datac(\Input0~input_o ),
	.datad(\Input1~input_o ),
	.cin(gnd),
	.combout(\inst|inst4|inst1~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst|inst4|inst1~0 .lut_mask = 16'h0FF0;
defparam \inst|inst4|inst1~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf \Sub~input (
	.i(Sub),
	.ibar(gnd),
	.o(\Sub~input_o ));
// synopsys translate_off
defparam \Sub~input .bus_hold = "false";
defparam \Sub~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \inst|inst4|inst6~0 (
// Equation(s):
// \inst|inst4|inst6~0_combout  = (\Input1~input_o  & (\Input0~input_o )) # (!\Input1~input_o  & ((\Sub~input_o )))

	.dataa(\Input0~input_o ),
	.datab(\Sub~input_o ),
	.datac(gnd),
	.datad(\Input1~input_o ),
	.cin(gnd),
	.combout(\inst|inst4|inst6~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst|inst4|inst6~0 .lut_mask = 16'hAACC;
defparam \inst|inst4|inst6~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf \Input2~input (
	.i(Input2),
	.ibar(gnd),
	.o(\Input2~input_o ));
// synopsys translate_off
defparam \Input2~input .bus_hold = "false";
defparam \Input2~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \Input3~input (
	.i(Input3),
	.ibar(gnd),
	.o(\Input3~input_o ));
// synopsys translate_off
defparam \Input3~input .bus_hold = "false";
defparam \Input3~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \inst|inst5|inst1 (
// Equation(s):
// \inst|inst5|inst1~combout  = \Sub~input_o  $ (\inst|inst4|inst6~0_combout  $ (\Input2~input_o  $ (\Input3~input_o )))

	.dataa(\Sub~input_o ),
	.datab(\inst|inst4|inst6~0_combout ),
	.datac(\Input2~input_o ),
	.datad(\Input3~input_o ),
	.cin(gnd),
	.combout(\inst|inst5|inst1~combout ),
	.cout());
// synopsys translate_off
defparam \inst|inst5|inst1 .lut_mask = 16'h6996;
defparam \inst|inst5|inst1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf \Input4~input (
	.i(Input4),
	.ibar(gnd),
	.o(\Input4~input_o ));
// synopsys translate_off
defparam \Input4~input .bus_hold = "false";
defparam \Input4~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \Input5~input (
	.i(Input5),
	.ibar(gnd),
	.o(\Input5~input_o ));
// synopsys translate_off
defparam \Input5~input .bus_hold = "false";
defparam \Input5~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \inst|inst5|inst6~0 (
// Equation(s):
// \inst|inst5|inst6~0_combout  = (\inst|inst4|inst6~0_combout  & ((\Input2~input_o ) # (\Input3~input_o  $ (\Sub~input_o )))) # (!\inst|inst4|inst6~0_combout  & (\Input2~input_o  & (\Input3~input_o  $ (\Sub~input_o ))))

	.dataa(\Input3~input_o ),
	.datab(\Sub~input_o ),
	.datac(\inst|inst4|inst6~0_combout ),
	.datad(\Input2~input_o ),
	.cin(gnd),
	.combout(\inst|inst5|inst6~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst|inst5|inst6~0 .lut_mask = 16'hF660;
defparam \inst|inst5|inst6~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \inst|inst6|inst1~0 (
// Equation(s):
// \inst|inst6|inst1~0_combout  = \Sub~input_o  $ (\Input4~input_o  $ (\Input5~input_o  $ (\inst|inst5|inst6~0_combout )))

	.dataa(\Sub~input_o ),
	.datab(\Input4~input_o ),
	.datac(\Input5~input_o ),
	.datad(\inst|inst5|inst6~0_combout ),
	.cin(gnd),
	.combout(\inst|inst6|inst1~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst|inst6|inst1~0 .lut_mask = 16'h6996;
defparam \inst|inst6|inst1~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf \Input6~input (
	.i(Input6),
	.ibar(gnd),
	.o(\Input6~input_o ));
// synopsys translate_off
defparam \Input6~input .bus_hold = "false";
defparam \Input6~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \Input7~input (
	.i(Input7),
	.ibar(gnd),
	.o(\Input7~input_o ));
// synopsys translate_off
defparam \Input7~input .bus_hold = "false";
defparam \Input7~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \inst|inst6|inst6~0 (
// Equation(s):
// \inst|inst6|inst6~0_combout  = (\inst|inst5|inst6~0_combout  & ((\Input4~input_o ) # (\Input5~input_o  $ (\Sub~input_o )))) # (!\inst|inst5|inst6~0_combout  & (\Input4~input_o  & (\Input5~input_o  $ (\Sub~input_o ))))

	.dataa(\Input5~input_o ),
	.datab(\Sub~input_o ),
	.datac(\inst|inst5|inst6~0_combout ),
	.datad(\Input4~input_o ),
	.cin(gnd),
	.combout(\inst|inst6|inst6~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst|inst6|inst6~0 .lut_mask = 16'hF660;
defparam \inst|inst6|inst6~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \inst|inst7|inst1~0 (
// Equation(s):
// \inst|inst7|inst1~0_combout  = \Sub~input_o  $ (\Input6~input_o  $ (\Input7~input_o  $ (\inst|inst6|inst6~0_combout )))

	.dataa(\Sub~input_o ),
	.datab(\Input6~input_o ),
	.datac(\Input7~input_o ),
	.datad(\inst|inst6|inst6~0_combout ),
	.cin(gnd),
	.combout(\inst|inst7|inst1~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst|inst7|inst1~0 .lut_mask = 16'h6996;
defparam \inst|inst7|inst1~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \inst|inst8~0 (
// Equation(s):
// \inst|inst8~0_combout  = (\inst|inst6|inst6~0_combout  & (!\Input6~input_o  & (\Input7~input_o  $ (!\Sub~input_o )))) # (!\inst|inst6|inst6~0_combout  & (\Input6~input_o  & (\Input7~input_o  $ (\Sub~input_o ))))

	.dataa(\Input7~input_o ),
	.datab(\Sub~input_o ),
	.datac(\inst|inst6|inst6~0_combout ),
	.datad(\Input6~input_o ),
	.cin(gnd),
	.combout(\inst|inst8~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst|inst8~0 .lut_mask = 16'h0690;
defparam \inst|inst8~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign Sum1 = \Sum1~output_o ;

assign Sum2 = \Sum2~output_o ;

assign Sum3 = \Sum3~output_o ;

assign Sum4 = \Sum4~output_o ;

assign Overflow = \Overflow~output_o ;

endmodule
